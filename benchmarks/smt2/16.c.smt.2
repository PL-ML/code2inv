
)

(define-fun pre-f ((m Int)(n Int)(tmp Int)(x Int)(m_23 Int)(m_25 Int)(m_31 Int)(m_34 Int)(n_0 Int)(x_22 Int)(x_26 Int)(x_33 Int)) Bool
  (and
    (= x x_22)
    (= m m_23)
    (= x_22 0)
    (= m_23 0)
  )
)

(define-fun trans-f ((m Int)(n Int)(tmp Int)(x Int)(m! Int)(n! Int)(tmp! Int)(x! Int)(m_23 Int)(m_25 Int)(m_31 Int)(m_34 Int)(n_0 Int)(x_22 Int)(x_26 Int)(x_33 Int)) Bool
  (or
    (and
      (= m_31 m)
      (= x_33 x)
      (= x_33 x!)
      (= m_31 m!)
      (= n n_0)
      (= n! n_0)
      (= tmp tmp!)
      (= m m!)
    )
    (and
      (= m_31 m)
      (= x_33 x)
      (< x_33 n_0)
      (= m_34 m_31)
      (= x_26 (+ x_33 1))
      (= x_26 x!)
      (= m_34 m!)
      (= n n_0)
      (= n! n_0)
      (= tmp tmp!)
      (= m m!)
    )
    (and
      (= m_31 m)
      (= x_33 x)
      (< x_33 n_0)
      (= m_25 x_33)
      (= m_34 m_25)
      (= x_26 (+ x_33 1))
      (= x_26 x!)
      (= m_34 m!)
      (= n n_0)
      (= n! n_0)
      (= tmp tmp!)
    )
  )
)

(define-fun post-f ((m Int)(n Int)(tmp Int)(x Int)(m_23 Int)(m_25 Int)(m_31 Int)(m_34 Int)(n_0 Int)(x_22 Int)(x_26 Int)(x_33 Int)) Bool
  (or
    (not
      (and
        (= m m_31)
        (= n n_0)
        (= x x_33)
      )
    )
    (not
      (and
        (not (< x_33 n_0))
        (> n_0 0)
        (not (>= m_31 0))
      )
    )
  )
)


(assert (not
  (=>
    (pre-f m n tmp x m_23 m_25 m_31 m_34 n_0 x_22 x_26 x_33 )
    (inv-f m n tmp x )
  )
))

